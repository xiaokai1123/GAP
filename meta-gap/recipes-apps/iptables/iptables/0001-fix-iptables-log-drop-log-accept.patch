From bfb0c0b8f10251d8dab1c240771d514c4a90d802 Mon Sep 17 00:00:00 2001
From: "xiaodong.li" <xiaodong.li@acron-net.com>
Date: Fri, 2 Dec 2016 10:58:06 +0800
Subject: [PATCH] fix iptables log-drop log-accept

---
 extensions/libip6t_LOG.c                | 33 +++++++++++++--
 extensions/libipt_LOG.c                 | 34 +++++++++++++--
 extensions/libxt_NFLOG.c                | 27 +++++++++++-
 extensions/libxt_mac.c                  | 74 +++++++++++++++++++++++++--------
 include/linux/netfilter/xt_NFLOG.h      |  6 ++-
 include/linux/netfilter/xt_mac.h        |  4 ++
 include/linux/netfilter_ipv4/ipt_LOG.h  |  6 ++-
 include/linux/netfilter_ipv6/ip6t_LOG.h |  6 ++-
 8 files changed, 161 insertions(+), 29 deletions(-)
 mode change 100644 => 100755 extensions/libip6t_LOG.c
 mode change 100644 => 100755 extensions/libipt_LOG.c
 mode change 100644 => 100755 extensions/libxt_NFLOG.c
 mode change 100644 => 100755 extensions/libxt_mac.c
 mode change 100644 => 100755 include/linux/netfilter/xt_NFLOG.h
 mode change 100644 => 100755 include/linux/netfilter/xt_mac.h
 mode change 100644 => 100755 include/linux/netfilter_ipv4/ipt_LOG.h
 mode change 100644 => 100755 include/linux/netfilter_ipv6/ip6t_LOG.h

diff --git a/extensions/libip6t_LOG.c b/extensions/libip6t_LOG.c
old mode 100644
new mode 100755
index 4639268..82c5ebb
--- a/extensions/libip6t_LOG.c
+++ b/extensions/libip6t_LOG.c
@@ -20,6 +20,10 @@ enum {
 	O_LOG_IPOPTS,
 	O_LOG_UID,
 	O_LOG_MAC,
+	/*add by ningzhiming for log and drop begin*/
+	O_LOG_DROP,
+	O_LOG_ACCEPT,
+	/*add by ningzhiming for log and drop end*/
 };
 
 static void LOG_help(void)
@@ -27,12 +31,13 @@ static void LOG_help(void)
 	printf(
 "LOG target options:\n"
 " --log-level level		Level of logging (numeric or see syslog.conf)\n"
-" --log-prefix prefix		Prefix log messages with this prefix.\n"
-" --log-tcp-sequence		Log TCP sequence numbers.\n"
+" --log-prefix prefix	Prefix log messages with this prefix.\n"
+" --log-tcp-sequence	Log TCP sequence numbers.\n"
 " --log-tcp-options		Log TCP options.\n"
 " --log-ip-options		Log IP options.\n"
-" --log-uid			Log UID owning the local socket.\n"
-" --log-macdecode		Decode MAC addresses and protocol.\n");
+" --log-uid				Log UID owning the local socket.\n"
+" --log-macdecode		Decode MAC addresses and protocol.\n"
+" --log-drop			Log and drop packet.\n\n");
 }
 
 #define s struct ip6t_log_info
@@ -46,6 +51,9 @@ static const struct xt_option_entry LOG_opts[] = {
 	{.name = "log-ip-options", .id = O_LOG_IPOPTS, .type = XTTYPE_NONE},
 	{.name = "log-uid", .id = O_LOG_UID, .type = XTTYPE_NONE},
 	{.name = "log-macdecode", .id = O_LOG_MAC, .type = XTTYPE_NONE},
+	/*add by ningzhiming for log and drop begin*/
+	{.name = "log-drop", .id = O_LOG_DROP, .type = XTTYPE_NONE},
+	{.name = "log-accept", .id = O_LOG_ACCEPT, .type = XTTYPE_NONE},	
 	XTOPT_TABLEEND,
 };
 #undef s
@@ -101,6 +109,13 @@ static void LOG_parse(struct xt_option_call *cb)
 	case O_LOG_MAC:
 		info->logflags |= IP6T_LOG_MACDECODE;
 		break;
+	/*add by ningzhiming for log and drop begin*/
+	case O_LOG_DROP:
+		info->logflags |= IP6T_LOG_DROP;
+		break;
+	case O_LOG_ACCEPT:
+		info->logflags |= IP6T_LOG_ACCEPT;
+		break;
 	}
 }
 
@@ -133,6 +148,11 @@ static void LOG_print(const void *ip, const struct xt_entry_target *target,
 			printf(" uid");
 		if (loginfo->logflags & IP6T_LOG_MACDECODE)
 			printf(" macdecode");
+		/*add by ningzhiming for log and drop begin*/
+		if (loginfo->logflags & IP6T_LOG_DROP)
+			printf(" drop");
+		if (loginfo->logflags & IP6T_LOG_ACCEPT)
+			printf(" accept");
 		if (loginfo->logflags & ~(IP6T_LOG_MASK))
 			printf(" unknown-flags");
 	}
@@ -164,6 +184,11 @@ static void LOG_save(const void *ip, const struct xt_entry_target *target)
 		printf(" --log-uid");
 	if (loginfo->logflags & IP6T_LOG_MACDECODE)
 		printf(" --log-macdecode");
+	/*add by ningzhiming for log and drop begin*/
+	if (loginfo->logflags & IP6T_LOG_DROP)
+		printf(" --log-drop");
+	if (loginfo->logflags & IP6T_LOG_ACCEPT)
+		printf(" --log-accept");
 }
 
 static struct xtables_target log_tg6_reg = {
diff --git a/extensions/libipt_LOG.c b/extensions/libipt_LOG.c
old mode 100644
new mode 100755
index 77f16d1..fb85b47
--- a/extensions/libipt_LOG.c
+++ b/extensions/libipt_LOG.c
@@ -20,6 +20,10 @@ enum {
 	O_LOG_IPOPTS,
 	O_LOG_UID,
 	O_LOG_MAC,
+	/*add by ningzhiming for log and drop begin*/
+	O_LOG_DROP,
+	O_LOG_ACCEPT,
+	/*add by ningzhiming for log and drop end*/
 };
 
 static void LOG_help(void)
@@ -27,12 +31,14 @@ static void LOG_help(void)
 	printf(
 "LOG target options:\n"
 " --log-level level		Level of logging (numeric or see syslog.conf)\n"
-" --log-prefix prefix		Prefix log messages with this prefix.\n\n"
-" --log-tcp-sequence		Log TCP sequence numbers.\n\n"
+" --log-prefix prefix	        Prefix log messages with this prefix.\n\n"
+" --log-tcp-sequence	        Log TCP sequence numbers.\n\n"
 " --log-tcp-options		Log TCP options.\n\n"
 " --log-ip-options		Log IP options.\n\n"
 " --log-uid			Log UID owning the local socket.\n\n"
-" --log-macdecode		Decode MAC addresses and protocol.\n\n");
+" --log-macdecode		Decode MAC addresses and protocol.\n\n"
+" --log-drop 			Log and drop packet.\n\n"
+);
 }
 
 #define s struct ipt_log_info
@@ -45,7 +51,10 @@ static const struct xt_option_entry LOG_opts[] = {
 	{.name = "log-tcp-options", .id = O_LOG_TCPOPTS, .type = XTTYPE_NONE},
 	{.name = "log-ip-options", .id = O_LOG_IPOPTS, .type = XTTYPE_NONE},
 	{.name = "log-uid", .id = O_LOG_UID, .type = XTTYPE_NONE},
-	{.name = "log-macdecode", .id = O_LOG_MAC, .type = XTTYPE_NONE},
+	{.name = "log-macdecode", .id = O_LOG_MAC, .type = XTTYPE_NONE},	
+	/*add by ningzhiming for log and drop begin*/
+	{.name = "log-drop", .id = O_LOG_DROP, .type = XTTYPE_NONE},
+	{.name = "log-accept", .id = O_LOG_ACCEPT, .type = XTTYPE_NONE},
 	XTOPT_TABLEEND,
 };
 #undef s
@@ -101,6 +110,13 @@ static void LOG_parse(struct xt_option_call *cb)
 	case O_LOG_MAC:
 		info->logflags |= IPT_LOG_MACDECODE;
 		break;
+	/*add by ningzhiming for log and drop begin*/
+	case O_LOG_DROP:
+		info->logflags |= IPT_LOG_DROP;
+		break;
+	case O_LOG_ACCEPT:
+		info->logflags |= IPT_LOG_ACCEPT;
+		break;
 	}
 }
 
@@ -133,6 +149,11 @@ static void LOG_print(const void *ip, const struct xt_entry_target *target,
 			printf(" uid");
 		if (loginfo->logflags & IPT_LOG_MACDECODE)
 			printf(" macdecode");
+		/*add by ningzhiming for log and drop begin*/
+		if (loginfo->logflags & IPT_LOG_DROP)
+			printf(" drop");
+		if (loginfo->logflags & IPT_LOG_ACCEPT)
+			printf(" accept");
 		if (loginfo->logflags & ~(IPT_LOG_MASK))
 			printf(" unknown-flags");
 	}
@@ -164,6 +185,11 @@ static void LOG_save(const void *ip, const struct xt_entry_target *target)
 		printf(" --log-uid");
 	if (loginfo->logflags & IPT_LOG_MACDECODE)
 		printf(" --log-macdecode");
+	/*add by ningzhiming for log and drop begin*/
+	if (loginfo->logflags & IPT_LOG_DROP)
+		printf(" --log-drop");
+	if (loginfo->logflags & IPT_LOG_ACCEPT)
+		printf(" --log-accept");
 }
 
 static struct xtables_target log_tg_reg = {
diff --git a/extensions/libxt_NFLOG.c b/extensions/libxt_NFLOG.c
old mode 100644
new mode 100755
index 448576a..accca2c
--- a/extensions/libxt_NFLOG.c
+++ b/extensions/libxt_NFLOG.c
@@ -13,6 +13,9 @@ enum {
 	O_PREFIX,
 	O_RANGE,
 	O_THRESHOLD,
+	/*add by ningzhiming for log and drop begin*/
+	O_DROP,
+	O_ACCEPT,
 };
 
 #define s struct xt_nflog_info
@@ -25,6 +28,9 @@ static const struct xt_option_entry NFLOG_opts[] = {
 	 .flags = XTOPT_PUT, XTOPT_POINTER(s, len)},
 	{.name = "nflog-threshold", .id = O_THRESHOLD, .type = XTTYPE_UINT16,
 	 .flags = XTOPT_PUT, XTOPT_POINTER(s, threshold)},
+	/*add by ningzhiming for log and drop begin*/
+	{.name = "nflog-drop", .id = O_DROP, .type = XTTYPE_NONE},
+	{.name = "nflog-accept", .id = O_ACCEPT, .type = XTTYPE_NONE},
 	XTOPT_TABLEEND,
 };
 #undef s
@@ -35,7 +41,11 @@ static void NFLOG_help(void)
 	       " --nflog-group NUM		NETLINK group used for logging\n"
 	       " --nflog-range NUM		Number of byte to copy\n"
 	       " --nflog-threshold NUM		Message threshold of in-kernel queue\n"
-	       " --nflog-prefix STRING		Prefix string for log messages\n");
+	       " --nflog-prefix STRING		Prefix string for log messages\n"
+	       /*add by ningzhiming for log and drop begin*/
+	       " --nflog-drop			Log and drop packet\n"
+		   " --nflog-accept			Log and accept packet\n"
+	       );
 }
 
 static void NFLOG_init(struct xt_entry_target *t)
@@ -43,10 +53,13 @@ static void NFLOG_init(struct xt_entry_target *t)
 	struct xt_nflog_info *info = (struct xt_nflog_info *)t->data;
 
 	info->threshold	= XT_NFLOG_DEFAULT_THRESHOLD;
+	/*add by ningzhiming for log and drop begin*/
+	info->flags = 0;
 }
 
 static void NFLOG_parse(struct xt_option_call *cb)
 {
+	struct xt_nflog_info *info = cb->data;
 	xtables_option_parse(cb);
 	switch (cb->entry->id) {
 	case O_PREFIX:
@@ -54,6 +67,13 @@ static void NFLOG_parse(struct xt_option_call *cb)
 			xtables_error(PARAMETER_PROBLEM,
 				   "Newlines not allowed in --log-prefix");
 		break;
+	/*add by ningzhiming for log and drop begin*/
+	case O_DROP:
+		info->flags |= XT_NFLOG_DROP;
+		break;
+	case O_ACCEPT:
+		info->flags |= XT_NFLOG_ACCEPT;
+		break;
 	}
 }
 
@@ -69,6 +89,11 @@ static void nflog_print(const struct xt_nflog_info *info, char *prefix)
 		printf(" %snflog-range %u", prefix, info->len);
 	if (info->threshold != XT_NFLOG_DEFAULT_THRESHOLD)
 		printf(" %snflog-threshold %u", prefix, info->threshold);
+	/*add by ningzhiming for log and drop begin*/
+	if (info->flags & XT_NFLOG_DROP)
+		printf(" %snflog-drop", prefix);
+	if (info->flags & XT_NFLOG_ACCEPT)
+		printf(" %snflog-accept", prefix);
 }
 
 static void NFLOG_print(const void *ip, const struct xt_entry_target *target,
diff --git a/extensions/libxt_mac.c b/extensions/libxt_mac.c
old mode 100644
new mode 100755
index f171d15..9ad9fd2
--- a/extensions/libxt_mac.c
+++ b/extensions/libxt_mac.c
@@ -8,7 +8,14 @@
 #include <linux/netfilter/xt_mac.h>
 
 enum {
-	O_MAC = 0,
+	O_SMAC = 0,
+	O_DMAC,
+	O_INVERT_SMAC,
+	O_INVERT_DMAC,
+	F_SMAC = 1 << O_SMAC,
+	F_DMAC = 1 << O_DMAC,
+	F_INVERT_SMAC = 1 << O_INVERT_SMAC,
+	F_INVERT_DMAC = 1 << O_INVERT_DMAC,
 };
 
 static void mac_help(void)
@@ -16,14 +23,22 @@ static void mac_help(void)
 	printf(
 "mac match options:\n"
 "[!] --mac-source XX:XX:XX:XX:XX:XX\n"
-"				Match source MAC address\n");
+"				Match source MAC address\n"
+/*add by ningzhiming for mac dest match*/
+"[!] --mac-dest   XX:XX:XX:XX:XX:XX\n"
+"				Match destination MAC address\n");
 }
 
 #define s struct xt_mac_info
 static const struct xt_option_entry mac_opts[] = {
-	{.name = "mac-source", .id = O_MAC, .type = XTTYPE_ETHERMAC,
-	 .flags = XTOPT_MAND | XTOPT_INVERT | XTOPT_PUT,
+	{.name = "mac-source", .id = O_SMAC, .type = XTTYPE_ETHERMAC,
+	 .flags = XTOPT_INVERT | XTOPT_PUT,
 	 XTOPT_POINTER(s, srcaddr)},
+	 /*add by ningzhiming for mac dest match*/
+	{.name = "mac-dest", .id = O_DMAC, .type = XTTYPE_ETHERMAC,
+	 .flags = XTOPT_INVERT | XTOPT_PUT,
+	 XTOPT_POINTER(s, destaddr)},
+	/*add by ningzhiming for mac dest match end*/
 	XTOPT_TABLEEND,
 };
 #undef s
@@ -33,8 +48,18 @@ static void mac_parse(struct xt_option_call *cb)
 	struct xt_mac_info *macinfo = cb->data;
 
 	xtables_option_parse(cb);
-	if (cb->invert)
-		macinfo->invert = 1;
+	switch(cb->entry->id) {
+		case O_SMAC:
+			macinfo->flags |= F_SMAC;
+			if (cb->invert)
+				macinfo->invert |= F_INVERT_SMAC;
+			break;
+		case O_DMAC:
+			macinfo->flags |= F_DMAC;
+			if (cb->invert)
+				macinfo->invert |= F_INVERT_DMAC;
+			break;
+	}
 }
 
 static void print_mac(const unsigned char *macaddress)
@@ -51,22 +76,37 @@ mac_print(const void *ip, const struct xt_entry_match *match, int numeric)
 {
 	const struct xt_mac_info *info = (void *)match->data;
 	printf(" MAC");
-
-	if (info->invert)
-		printf(" !");
-	
-	print_mac(info->srcaddr);
+	if(info->flags & F_SMAC) {
+		printf(" SMAC:");
+		if (info->invert & F_INVERT_SMAC)
+			printf(" !");
+		print_mac(info->srcaddr);
+	}
+	/*add by ningzhiming for mac dest match*/
+	if(info->flags & F_DMAC) {
+		printf(" DMAC:");
+		if (info->invert & F_INVERT_DMAC)
+			printf(" !");
+		print_mac(info->destaddr);
+	}
+	/*add by ningzhiming for mac dest match end*/
 }
 
 static void mac_save(const void *ip, const struct xt_entry_match *match)
 {
 	const struct xt_mac_info *info = (void *)match->data;
-
-	if (info->invert)
-		printf(" !");
-
-	printf(" --mac-source");
-	print_mac(info->srcaddr);
+	if(info->flags & F_SMAC) {
+		if (info->invert & F_INVERT_SMAC)
+			printf(" !");
+		printf(" --mac-source");
+		print_mac(info->srcaddr);
+	}
+	if(info->flags & F_DMAC) {
+		if (info->invert & F_INVERT_DMAC)
+			printf(" !");
+		printf(" --mac-dest");
+		print_mac(info->destaddr);
+	}
 }
 
 static struct xtables_match mac_match = {
diff --git a/include/linux/netfilter/xt_NFLOG.h b/include/linux/netfilter/xt_NFLOG.h
old mode 100644
new mode 100755
index 87b5831..ed07569
--- a/include/linux/netfilter/xt_NFLOG.h
+++ b/include/linux/netfilter/xt_NFLOG.h
@@ -6,7 +6,11 @@
 #define XT_NFLOG_DEFAULT_GROUP		0x1
 #define XT_NFLOG_DEFAULT_THRESHOLD	0
 
-#define XT_NFLOG_MASK			0x0
+/*add by ningzhiming for log and drop begin*/
+#define XT_NFLOG_DROP     		0x1
+#define XT_NFLOG_ACCEPT     	0x2
+#define XT_NFLOG_MASK			0x3
+/*add by ningzhiming for log and drop end*/
 
 struct xt_nflog_info {
 	__u32	len;
diff --git a/include/linux/netfilter/xt_mac.h b/include/linux/netfilter/xt_mac.h
old mode 100644
new mode 100755
index b892cdc..45ddfe5
--- a/include/linux/netfilter/xt_mac.h
+++ b/include/linux/netfilter/xt_mac.h
@@ -3,6 +3,10 @@
 
 struct xt_mac_info {
     unsigned char srcaddr[ETH_ALEN];
+	/*add by ningzhiming for mac dest match begin*/
+	unsigned char destaddr[ETH_ALEN];
+	/*add by ningzhiming for mac dest match end*/
     int invert;
+	int flags;
 };
 #endif /*_XT_MAC_H*/
diff --git a/include/linux/netfilter_ipv4/ipt_LOG.h b/include/linux/netfilter_ipv4/ipt_LOG.h
old mode 100644
new mode 100755
index dcdbadf..86e0268
--- a/include/linux/netfilter_ipv4/ipt_LOG.h
+++ b/include/linux/netfilter_ipv4/ipt_LOG.h
@@ -8,7 +8,11 @@
 #define IPT_LOG_UID		0x08	/* Log UID owning local socket */
 #define IPT_LOG_NFLOG		0x10	/* Unsupported, don't reuse */
 #define IPT_LOG_MACDECODE	0x20	/* Decode MAC header */
-#define IPT_LOG_MASK		0x2f
+/*add by ningzhiming for log and drop begin*/
+#define IPT_LOG_DROP     0x40
+#define IPT_LOG_ACCEPT   0x80
+/*add by ningzhiming for log and drop end*/
+#define IPT_LOG_MASK		0xff
 
 struct ipt_log_info {
 	unsigned char level;
diff --git a/include/linux/netfilter_ipv6/ip6t_LOG.h b/include/linux/netfilter_ipv6/ip6t_LOG.h
old mode 100644
new mode 100755
index 9dd5579..2aacb6f
--- a/include/linux/netfilter_ipv6/ip6t_LOG.h
+++ b/include/linux/netfilter_ipv6/ip6t_LOG.h
@@ -8,7 +8,11 @@
 #define IP6T_LOG_UID		0x08	/* Log UID owning local socket */
 #define IP6T_LOG_NFLOG		0x10	/* Unsupported, don't use */
 #define IP6T_LOG_MACDECODE	0x20	/* Decode MAC header */
-#define IP6T_LOG_MASK		0x2f
+/*add by ningzhiming for log and drop begin*/
+#define IP6T_LOG_DROP        0x40
+#define IP6T_LOG_ACCEPT      0x80
+/*add by ningzhiming for log and drop end*/
+#define IP6T_LOG_MASK		0xff
 
 struct ip6t_log_info {
 	unsigned char level;
-- 
1.9.1

